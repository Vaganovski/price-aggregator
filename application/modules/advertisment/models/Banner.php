<?php

/**
 * Advertisment_Model_Banner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Advertisment_Model_Banner extends Advertisment_Model_Base_Banner
{
    /**
     * Путь к изображению относительно public
     */
    const PUBLIC_UPLOAD_PATH = '/upload/images/banner-backgrounds';

    /**
     * Возвращает абсолютный путь к папке с оригинальными изображениями
     *
     * @return string
     */
    public static function getImageAbsoluteUploadPath()
    {
        return realpath(APPLICATION_PATH . '/../public' . self::PUBLIC_UPLOAD_PATH);
    }

    /**
     * Return url path to the image file
     *
     * @return string
     */
    public function getBackgroundImageUrl()
    {
        if (strlen($this->background_image)) {
            return self::PUBLIC_UPLOAD_PATH
                . '/'
                . $this->background_image;
        }
        return NULL;
    }

    public function getDiffUntillDateNowDate()
    {
      $nowDate = new Zend_Date();
      $untillDate = new Zend_Date($this->untill_date);
      return floor(($untillDate->getTimestamp() - $nowDate->getTimestamp())/86400);
    }

    public function getDiffLastRenewalUntillDate()
    {
      $lastRenewalDate = new Zend_Date($this->last_renewal_date);
      $untillDate = new Zend_Date($this->untill_date);
      return ceil(($untillDate->getTimestamp() - $lastRenewalDate->getTimestamp())/86400);
    }

    public function getDaysAgo()
    {
      $nowDate = new Zend_Date();
      $lastRenewalDate = new Zend_Date($this->last_renewal_date);
      return floor(($nowDate->getTimestamp() - $lastRenewalDate->getTimestamp())/86400);
    }

    public function setBackgroundColor($value) 	{
        $value = str_replace('#', '', $value);
        $this->_set('background_color', $value);
    }

    public function preSave($event = NULL) {
        if (!isset ($this->untill_date)) {
            $this->untill_date = Zend_Date::now()->toString('y-MM-dd WW');;
        }
        if (!isset ($this->last_renewal_date)) {
            $this->last_renewal_date = Zend_Date::now()->toString('y-MM-dd WW');;
        }
        parent::preSave($event);
    }
}