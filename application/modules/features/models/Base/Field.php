<?php

/**
 * Features_Model_Base_Field
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $features_set_id
 * @property string $title
 * @property enum $type
 * @property string $unit
 * @property boolean $slider
 * @property Features_Model_Set $Set
 * @property Doctrine_Collection $Values
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class Features_Model_Base_Field extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('features_fields');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('features_set_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('type', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'select',
              1 => 'text',
             ),
             ));
        $this->hasColumn('unit', 'string', 140, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '140',
             ));
        $this->hasColumn('slider', 'boolean', null, array(
             'type' => 'boolean',
             'length' => '',
             ));


        $this->index('features_fields_unit', array(
             'fields' => 
             array(
              'unit' => 
              array(
              'length' => 10,
              ),
             ),
             ));
        $this->option('type', 'INNODB');
        $this->option('collate', 'utf8_unicode_ci');
        $this->option('charset', 'utf8');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Features_Model_Set as Set', array(
             'local' => 'features_set_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Features_Model_Value as Values', array(
             'local' => 'id',
             'foreign' => 'features_field_id'));
    }
}