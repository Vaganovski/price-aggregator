<?php

/**
 * Pages_Model_Page
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Pages_Model_Page extends Pages_Model_Base_Page
{
    /**
     * Set title
     *
     * @param string $title
     * @param string $lang
     * @return void
     */
    public function setTitle($title, $lang = null)
    {
        if (is_null($lang)) {
            $lang = $this->_getLanguage();
        }
        $this->Translation[$lang]->title = $title;
    }

    /**
     * Get description
     *
     * @param string $lang
     * @return string
     */
    public function getTitle($lang = null)
    {
        if (!is_string($lang)) {
            //если язык не указан - ставим текущий язык
            $lang = $this->_getLanguage();

            if ($this->Translation[$lang]->title) {
                //если есть перевод
                return $this->Translation[$lang]->title;
            } else {
                //если нет - перевод на языке по умолчанию
                $config = Zend_Registry::get('config');
                return $this->Translation[$config->get('locales')->key()]->title;
            }
        } else {
            //иначе - возвращаем описание на запрашиваемом языке
            return $this->Translation[$lang]->title;
        }
     }

    /**
     * Set keywords
     *
     * @param string $keywords
     * @param string $lang
     * @return void
     */
    public function setKeywords($keywords, $lang = null)
    {
            if (is_null($lang)) {
                $lang = $this->_getLanguage();
            }
            $this->Translation[$lang]->keywords = $keywords;
    }

    /**
     * Get description
     *
     * @param string $lang
     * @return string
     */
    public function getKeywords($lang = null)
    {
        if (!is_string($lang)) {
            //если язык не указан - ставим текущий язык
            $lang = $this->_getLanguage();

            if ($this->Translation[$lang]->keywords) {
                //если есть перевод
                return $this->Translation[$lang]->keywords;
            } else {
                //если нет - перевод на языке по умолчанию
                $config = Zend_Registry::get('config');
                return $this->Translation[$config->get('locales')->key()]->keywords;
            }
        } else {
            //иначе - возвращаем описание на запрашиваемом языке
            return $this->Translation[$lang]->keywords;
        }
     }

    /**
     * Set description
     *
     * @param string $description
     * @param string $lang
     * @return void
     */
    public function setDescription($description, $lang = null)
    {
        if (is_null($lang)) {
            $lang = $this->_getLanguage();
        }
        $this->Translation[$lang]->description = $description;
    }

    /**
     * Get description
     *
     * @param string $lang
     * @return string
     */
    public function getDescription($lang = null)
    {
        if (!is_string($lang)) {
            //если язык не указан - ставим текущий язык
            $lang = $this->_getLanguage();

            if ($this->Translation[$lang]->description) {
                //если есть перевод
                return $this->Translation[$lang]->description;
            } else {
                //если нет - перевод на языке по умолчанию
                $config = Zend_Registry::get('config');
                return $this->Translation[$config->get('locales')->key()]->description;
            }
        } else {
            //иначе - возвращаем описание на запрашиваемом языке
            return $this->Translation[$lang]->description;
        }
     }

    /**
     * Set content
     *
     * @param string $content
     * @param string $lang
     * @return void
     */
    public function setContent($content, $lang = null)
    {

        if (is_null($lang)) {
            $lang = $this->_getLanguage();
        }
        $this->Translation[$lang]->content = $content;

    }

    /**
     * Get description
     *
     * @param string $lang
     * @return string
     */
    public function getContent($lang = null)
    {
        if (!is_string($lang)) {
            //если язык не указан - ставим текущий язык
            $lang = $this->_getLanguage();

            if ($this->Translation[$lang]->content) {
                //если есть перевод
                return $this->Translation[$lang]->content;
            } else {
                //если нет - перевод на языке по умолчанию
                $config = Zend_Registry::get('config');
                return $this->Translation[$config->get('locales')->key()]->content;
            }
        } else {
            //иначе - возвращаем описание на запрашиваемом языке
            return $this->Translation[$lang]->content;
        }
     }

    /**
     * Возвращает текущий язык
     *
     * @return string
     */
    protected function _getLanguage()
    {
        return Zend_Controller_Front::getInstance()->getParam('bootstrap')->getResource('Locale')->getLanguage();
    }

}