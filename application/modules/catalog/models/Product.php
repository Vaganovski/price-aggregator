<?php

/**
 * Catalog_Model_Product
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
class Catalog_Model_Product extends Catalog_Model_Base_Product
{
    /**
     * Получение составного имени товара
     *
     * @return string
     */
    public function getName()
    {
        return ($this->Brand->name == 'unknown')
            ? $this->_get('name') // Игнор бренда "unknown"
            : $this->Brand->name . ' ' . $this->_get('name');
    }

    /**
     * Получение цены товара
     *
     * @return string
     */
    public function getPrice()
    {
        $currency = new Zend_Currency();
        
        $min_price = $this->_get('min_price');
        $currency->setFormat(array('precision' => 0, 'symbol' => ''));
        $min_price = $currency->toCurrency((double)$min_price);

        $max_price = $this->_get('max_price');
        $currency->setFormat(array('precision' => 0, 'symbol' => ''));
        $max_price = $currency->toCurrency((double)$max_price);

        if ($min_price && $max_price && $this->_get('max_price') > $this->_get('min_price')) {
            return '<b>' . $min_price . '</b>- <b>' . $max_price . '</b>тенге';
        } elseif(!$min_price && !$max_price) {
            return _('нет в продаже');
        } else {
            return '<b>' . $min_price . '</b>тенге';
        }
    }

    public function getAvgPrice()
    {
        $currency = new Zend_Currency();
        $price = $this->_get('avg_price');
        $currency->setFormat(array('precision' => 0, 'symbol' => ''));
        $price = $currency->toCurrency($price);
        return substr($price, 0, strlen($price) - 2);
    }

    public function getMinPriceFormated()
    {
        $currency = new Zend_Currency();
        $price = $this->_get('min_price');
        $currency->setFormat(array('precision' => 0, 'symbol' => ''));
        $price = $currency->toCurrency($price);

        return substr($price, 0, strlen($price) - 2);
    }
}