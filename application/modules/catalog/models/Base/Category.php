<?php

/**
 * Catalog_Model_Base_Category
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $features_group_id
 * @property string $image_filename
 * @property Doctrine_Collection $Products
 * @property Doctrine_Collection $Accessories
 * @property Features_Model_Group $Group
 * @property Doctrine_Collection $CategoriesAccessories
 * @property Doctrine_Collection $CategoryAccessories
 * @property Doctrine_Collection $Categories
 * @property Doctrine_Collection $CategoryProduct
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class Catalog_Model_Base_Category extends Categories_Model_Category
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('catalog_categories');
        $this->hasColumn('features_group_id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => true,
             'length' => '4',
             ));
        $this->hasColumn('image_filename', 'string', 45, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '45',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Catalog_Model_Product as Products', array(
             'refClass' => 'Catalog_Model_CategoryProduct',
             'local' => 'category_id',
             'foreign' => 'product_id'));

        $this->hasMany('Catalog_Model_Category as Accessories', array(
             'refClass' => 'Catalog_Model_CategoryAccessories',
             'local' => 'category_accessory_id',
             'foreign' => 'category_id'));

        $this->hasOne('Features_Model_Group as Group', array(
             'local' => 'features_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Catalog_Model_Category as CategoriesAccessories', array(
             'refClass' => 'Catalog_Model_CategoryAccessories',
             'local' => 'category_id',
             'foreign' => 'category_accessory_id'));

        $this->hasMany('Catalog_Model_CategoryAccessories as CategoryAccessories', array(
             'local' => 'id',
             'foreign' => 'category_id'));

        $this->hasMany('Catalog_Model_CategoryAccessories as Categories', array(
             'local' => 'id',
             'foreign' => 'category_accessory_id'));

        $this->hasMany('Catalog_Model_CategoryProduct as CategoryProduct', array(
             'local' => 'id',
             'foreign' => 'category_id'));
    }
}