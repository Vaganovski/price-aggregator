<?php

/**
 * Users_Model_Base_User
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property string $city
 * @property enum $role
 * @property string $phone
 * @property Doctrine_Collection $ProductsList
 * @property Doctrine_Collection $Reviews
 * @property Doctrine_Collection $Comments
 * @property Doctrine_Collection $Products
 * @property Doctrine_Collection $UserShop
 * @property Doctrine_Collection $Shop
 * @property Doctrine_Collection $ChainShop
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class Users_Model_Base_User extends Users_Model_UserExtended
{
    public function setTableDefinition()
    {
        parent::setTableDefinition();
        $this->setTableName('users');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('city', 'string', 100, array(
             'type' => 'string',
             'length' => '100',
             ));
        $this->hasColumn('role', 'enum', null, array(
             'type' => 'enum',
             'notnull' => true,
             'values' => 
             array(
              0 => 'administrator',
              1 => 'member',
              2 => 'merchant',
              3 => 'manager',
             ),
             ));
        $this->hasColumn('phone', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Catalog_Model_MyProductsList as ProductsList', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Catalog_Model_Review as Reviews', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Comments_Model_Comment as Comments', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Marketplace_Model_Product as Products', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Shops_Model_Shop as UserShop', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('Shops_Model_Shop as Shop', array(
             'local' => 'id',
             'foreign' => 'manager_id'));

        $this->hasMany('Shops_Model_ChainShop as ChainShop', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}